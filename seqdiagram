@https://www.websequencediagrams.com

title Automatic Parking Fee Collection w/t Stellar

opt enter
Car->Camera: license plate
Camera->entry-BLE: license plate img
entry-BLE -> openALPR : get camera.$license
openALPR -> entry-BLE : camera.$license

entry-BLE -> App: challenge + $BLEAccID
App -> entry-BLE: BLE.tx.memo(App.@).mD(base64(App.$license), App.$appAccID)

entry-BLE -> entry-BLE:compare(base64(camera.$license),base64(App.$license))

entry-BLE -> entry-Gate: open gate command

entry-BLE -> Stellar : sign(BLE.tx.memo(App.@).mD(base64(App.$license), App.$appAccID))
Stellar -> entry-BLE : $txEnterMDID
end



opt exit
Car->Camera: license plate
Camera->exit-BLE: license plate img
exit-BLE -> openALPR : get camera.$license
openALPR -> exit-BLE : camera.$license

exit-BLE -> App: challenge + $BLEAccID
App -> App : compare(Enter.$BLEAccID, Exit.$BLEAccID)
App -> exit-BLE:  BLE.tx.memo(App.@).mD(base64(App.$license), App.$appAccID)

exit-BLE -> Stellar :  get mD(base64(App.$license)), mD(App.$appAccID), $EnterTimestamp where $BLEAccID where memo(App.@)
Stellar -> exit-BLE : mD(base64(App.$license)), mD(App.$appAccID), $EnterTimestamp

exit-BLE -> exit-BLE:compare(mD(base64(App.$license)), base64(camera.$license), base64(App.$license))\ncompare(mD(App.$appAccID), App.$appAccID)

exit-BLE -> Stellar : sign(BLE.tx.memo(App.@).mD(base64(App.$license), empty)
Stellar -> exit-BLE : $txExitMemoID

exit-BLE -> Stellar : get $ExitTimeStamp where $txExitMemoID
Stellar -> exit-BLE : $EnterTimestamp, $ExitTimeStamp

exit-BLE -> exit-BLE : calculate $amount
exit-BLE -> App: challenge + $BLEAccID +$DestAccID + $amount
App -> exit-BLE: sign(BLE&App.tx.memo(App.@).payment($DestAccID, $amount))
exit-BLE -> Stellar : sign(signed(BLE&App.tx.memo(App.@).payment($DestAccID, $amount)))
Stellar -> exit-BLE : $txPaymentID
exit-BLE -> exit-Gate: open gate command

end 
