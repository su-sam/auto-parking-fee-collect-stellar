@https://www.websequencediagrams.com

title Automatic Parking Fee Collection w/t Stellar

opt enter
Car->entryCamera: license plate
entryCamera->Node: license plate img
Node -> openALPR : get camera.$license
openALPR -> Node : camera.$license

Node -> App: challenge + $nodeAccID
App -> Node: response + node.tx.mD(App.$appAccID, App.$license)

Node -> Node:compare(camera.$license,App.$license)

Node -> Stellar : sign(node.tx.mD(App.$appAccID, App.$license)
Stellar -> Node : $txEnterMDID
Node -> App : $txEnterMDID

Node -> entry-Gate: open gate command
end



opt exit
Car->exitCamera: license plate
exitCamera->Node: license plate img
Node -> openALPR : get camera.$license
openALPR -> Node : camera.$license

Node -> App: challenge + $nodeAccID
App -> App : compare(Enter.$nodeAccID, Exit.$nodeAccID)
App -> Node:  response + $txEnterMDID + node.tx.mD(App.$appAccID, empty)

Node -> Stellar :  get $sourceID, mD(App.$appAccID), mD(App.$license) where App.$txEnterMDID
Stellar -> Node : $sourceID, mD(App.$appAccID), mD(App.$license)

Node -> Node : compare($sourceID, $nodeAccID)
Node -> Node: compare(mD(App.$license), camera.$license)\ncompare(mD(App.$appAccID), App.$appAccID)

Node -> Stellar : sign(node.tx.mD(App.$appAccID, empty))
Stellar -> Node : $txExitMDID

Node -> Stellar : get $EnterTimeStamp, $ExitTimeStamp where $txEnterMDID, $txExitMDID
Stellar -> Node : $EnterTimestamp, $ExitTimeStamp

Node -> Node : calculate $amount

Node -> App: $nodeAccID + $amount

App -> App : compare(new.$nodeAccID, exist.$nodeAccID)
App -> Node: sign(Node&App.tx.payment($nodeAccID, $amount))

Node -> Node : compare(payment(destination.$nodeAccID), $nodeAccID)\ncompare(payment(amount.$fee),$amount)\nisXLM(payment(asset))
Node -> Stellar : sign(signed(Nodet&App.tx.payment($nodeAccID, $amount)))
Stellar -> Node : $txPaymentID
Node -> App : reciept

Node -> exit-Gate: open gate command
end 
